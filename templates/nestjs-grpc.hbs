/* eslint-disable @typescript-eslint/no-namespace */
/* eslint-disable @typescript-eslint/no-unused-vars */
/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from "rxjs";

{{#*inline "selector"}}
{{#each nested}}
{{#if fields}}
{{> type }}
{{else if methods}}
{{> service }}
{{else if values}}
{{> enum }}
{{else}}
{{> namespace }}
{{/if}}
{{/each}}
{{/inline}}
{{> selector }}
{{#*inline "namespace"}}
export namespace {{@key}} {
    {{> selector }}
}
{{/inline}}

{{#*inline "service"}}
{{#each methods}}
{{else}}
// tslint:disable-next-line:no-empty-interface
{{/each}}

export interface {{@key}} {
{{#each methods}}
    {{uncapitalize @key}}(input: {{this.requestType}}): Promise<{{this.responseType}}>;
{{/each}}
}

{{#ifCommonOrInternal @key}}
export interface {{client @key}} {
{{#each methods}}
    {{uncapitalize @key}}(input: {{this.requestType}}): Observable<{{this.responseType}}>;
{{/each}}
}

export interface {{stub @key}} {
{{#each methods}}
    {{uncapitalize @key}}(input: {{this.requestType}}): Promise<{{this.responseType}}['data']>;
{{/each}}
}
{{/ifCommonOrInternal}}

{{> selector }}
{{/inline}}
{{#*inline "type"}}
{{#each fields}}
{{else}}
// tslint:disable-next-line:no-empty-interface
{{/each}}
export interface {{@key}} {
{{#each fields}}
{{#if this.required}}
    {{@key}}: {{type this}};
{{else if this.repeated}}
    {{@key}}?: {{type this}} | null;
{{else if this.optional}}
    {{@key}}?: {{type this}} | null;
{{/if}}
{{/each}}
}
{{#if nested}}
export namespace {{@key}} {
    {{> selector }}
}
{{/if}}
{{/inline}}
{{#*inline "enum"}}
{{#each values}}
{{else}}
// tslint:disable-next-line:no-empty-interface
{{/each}}
export enum {{@key}} {
{{#each values}}
    {{@key}} = '{{this}}',
{{/each}}
}
{{/inline}}
